{"ast":null,"code":"import SHA256 from \"crypto-js/sha256.js\";\n\nclass Block {\n  constructor(id, data) {\n    this.id = id;\n    this.data = data;\n  } //A toHash function which will create a hash of this block using the data it contains\n\n\n  toHash() {\n    return SHA256(this.id + this.data + this.previousHash + this.nonce).toString();\n  }\n\n} //this line makes it so the other JS files in the folder can access (this comment is for me)\n\n\nexport default Block;","map":{"version":3,"names":["SHA256","Block","constructor","id","data","toHash","previousHash","nonce","toString"],"sources":["/Users/cooperjensen/coding/portfolio/react-blockchain/react-blockchain/src/block.js"],"sourcesContent":["import SHA256 from \"crypto-js/sha256.js\";\nclass Block {\n    \n    constructor(id,data){\n        this.id = id;\n        this.data = data;\n       \n    }\n\n    //A toHash function which will create a hash of this block using the data it contains\n    toHash(){\n        return SHA256(this.id+this.data+this.previousHash+this.nonce).toString();\n    }\n}\n\n//this line makes it so the other JS files in the folder can access (this comment is for me)\nexport default Block;"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,qBAAnB;;AACA,MAAMC,KAAN,CAAY;EAERC,WAAW,CAACC,EAAD,EAAIC,IAAJ,EAAS;IAChB,KAAKD,EAAL,GAAUA,EAAV;IACA,KAAKC,IAAL,GAAYA,IAAZ;EAEH,CANO,CAQR;;;EACAC,MAAM,GAAE;IACJ,OAAOL,MAAM,CAAC,KAAKG,EAAL,GAAQ,KAAKC,IAAb,GAAkB,KAAKE,YAAvB,GAAoC,KAAKC,KAA1C,CAAN,CAAuDC,QAAvD,EAAP;EACH;;AAXO,C,CAcZ;;;AACA,eAAeP,KAAf"},"metadata":{},"sourceType":"module"}